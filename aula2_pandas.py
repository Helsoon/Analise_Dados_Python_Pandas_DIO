# -*- coding: utf-8 -*-
"""Aula2_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vBup-YQCjKEow_EkxKmDk-vBCh5vsRC2
"""

import pandas as pd
import matplotlib as plot
import matplotlib.pyplot as plt

df1 = pd.read_excel("Aracaju.xlsx")
df2 = pd.read_excel("Fortaleza.xlsx")
df3 = pd.read_excel("Natal.xlsx")
df4 = pd.read_excel("Recife.xlsx")
df5 = pd.read_excel("Salvador.xlsx")

df4.head()

#juntando todos as arquivos
df = pd.concat([df1,df2,df3,df4,df5])

df.head()

df.tail()

df.sample(5)

df.dtypes

df["LojaID"] = df["LojaID"].astype("object")

df.dtypes

#consultando linhas com valores faltantes
df.isnull().sum()

#Criando uma nova coluna de receita
df["Receita"] = df["Vendas"].mul(df["Qtde"])

df.head()

#retoranando a maior receita
df["Receita"].max()

df["Receita"].min()

df.nlargest(3,"Receita")

df.nsmallest(3, "Receita")

#Agrupamento por cidade
teste = df.groupby("Cidade")["Receita"].sum()
teste

#ordenando o cojunto de valores
teste.sort_values(ascending=False).head(10)

df["Data"] = df["Data"].astype("int")

df.dtypes

#Transformando coluna de data em data
df["Data"] = pd.to_datetime(df["Data"])

df.dtypes

#Agrupamento por ano
df.groupby(df["Data"].dt.year)["Receita"].sum()

#Criando a coluna de ano
df["Ano_Venda"] = df["Data"].dt.year

df.sample(5)

#Extraindo o mês e o dia 
df["mes_venda"], df["dia_venda"] = (df["Data"].dt.month, df["Data"].dt.day)

df.sample(5)

#mostrando a data mais antiga
df["Data"].min()

#Calculando a diferença de dias
df["diferença_dias"] = df["Data"] - df["Data"].min()

df.head(5)

#criando uma coluna de Trimestre
df["Trimestre_venda"]= df["Data"].dt.quarter

df.sample(5)

vendas_marco_19 = df.loc[(df["Data"].dt.year== 2019) & (df["Data"].dt.month == 3)]

vendas_marco_19.sample(25)

df["LojaID"].value_counts(ascending=False)

#Grafico de barras
df["LojaID"].value_counts(ascending=False).plot.bar()

#Grafico de barras horizontais
df["LojaID"].value_counts(ascending=True).plot.barh();

#Grafico de pizza
df.groupby(df["Data"].dt.year)["Receita"].sum().plot.pie();

#total de vendas por cidades
df["Cidade"].value_counts()

#Adicionado um titulo e alterando o nome dos eixos
df["Cidade"].value_counts().plot.bar(title="Total Vendas por cidade")
plt.xlabel("Cidade");
plt.ylabel("Total Vendas");

#Mudando a Cor
df["Cidade"].value_counts().plot.bar(title="Total Vendas por cidade", color = "red")
plt.xlabel("Cidade");
plt.ylabel("Total Vendas");

#alterando o Estilo
plt.style.use("ggplot")

df.groupby(df["mes_venda"])["Qtde"].sum().plot(title = "Total Produtos Vendidos por mês")
plt.xlabel("Mês")
plt.ylabel("Total Produtos Vendidos");
plt.legend();

df.groupby(df["mes_venda"])["Qtde"].sum()

df_2019 = df[df["Ano_Venda"]== 2019]
df_2019

df_2019.groupby(df_2019["mes_venda"])["Qtde"].sum().plot(marker = "o")
plt.xlabel("Mês")
plt.ylabel("Total Produtos Vendidos");
plt.legend();

df_2019.groupby(df_2019["mes_venda"])["Qtde"].sum()

#histograma
import numpy as np
plt.hist(df["Qtde"], color="magenta");

plt.scatter(x=df_2019["dia_venda"], y = df_2019["Receita"]);

#Salvando em PNG
df_2019.groupby(df_2019["mes_venda"])["Qtde"].sum().plot(marker = 'v')
plt.title("Quantidade de produtos vendidos x mês")
plt.xlabel("Mês")
plt.ylabel("Total Produtos Vendidos");
plt.legend()
plt.savefig("grafico QTDE x MES.png")

